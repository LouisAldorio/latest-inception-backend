type Comodity {
    id: ID!
    name: String!
    image: [String]! @goField(forceResolver: true)
    unit_price: Float!
    unit_type: String!
    min_purchase: Int!    
    description: String
    user_id: ID!
    category_id: ID!
    created_at: Time!
    updated_at: Time!
    deleted_at: Time
    user: User! @goField(forceResolver: true)
}

type ComodityWithCategory {
    limit: Int
    page: Int    
    category_id: ID!
    category: Category! 
    total_item: Int! @goField(forceResolver: true)
    nodes: [Comodity]! @goField(forceResolver: true)
}

input NewComodity {
    name: String!
    unit_price: Float!
    unit_type: String!
    min_purchase: Int!
    description: String
    category_id: ID!
    images: [String!]!
}

type ComodityImage {
    comodity_id: Int!
    image_id: Int!
}

type ComodityPagination {
    limit: Int
    page: Int
    total_item: Int! @goField(forceResolver: true)
    nodes: [Comodity]! @goField(forceResolver: true)
}

type CommodityOps {
    create(input: NewComodity!): Comodity! @goField(forceResolver:true)
    update(input: NewComodity!): Comodity! @goField(forceResolver:true)
}