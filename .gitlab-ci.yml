stages:
  # - build
  - deploy

variables:
  CONTAINER_NAME: inception-backend
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_PIPELINE_ID: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_PIPELINE_ID
  APP_DOMAIN: inception.louisaldorio.site
  DOCKER_TLS_CERTDIR: ''

# build: 
#   image: docker:stable-dind
#   services:
#     - docker:19.03.12-dind
#   stage: build
#   script:
#     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
#     - docker build --build-arg VERSION=$CI_PIPELINE_ID -f Dockerfile -t $TAG_PIPELINE_ID -t $TAG_LATEST .
#     - docker push $TAG_LATEST
#     - docker push $TAG_PIPELINE_ID
#   only:
#     - master


deployment:
  image: alpine:latest
  stage: deploy
  before_script:
    ## Install ssh agent (so we can access the Digital Ocean Droplet) and run it.
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)

    ## Write the environment variable value to the agent store, create the ssh directory and give the right permissions to it.
    - echo "$ID_RSA" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ## Make sure that ssh will trust the new host, instead of asking
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

    ## Test it!
    - ssh -t ${SECRETS_DIGITAL_OCEAN_DROPLET_USER}@${SECRETS_DIGITAL_OCEAN_DROPLET_IP} 'echo $HOME'
  script:
    - cat $ID_RSA
    - chmod og= $ID_RSA
    # - apk update && apk add openssh-client
    # - apk add sshpass
    # - sshpass -p $SSH_KEY ssh $SERVER_USER@$SERVER_IP "echo $HOME"
    # - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    # - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT"
    # - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /home/louisaldorio/latest-$CONTAINER_NAME"
    # - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f $CONTAINER_NAME || true"
    # - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d --name $CONTAINER_NAME --env-file ./.env --net global-network $TAG_COMMIT"
  environment:
    name: production
    url: https://$APP_DOMAIN
  only:
    - master